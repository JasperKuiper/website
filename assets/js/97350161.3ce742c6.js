"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[55991],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79235:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],l={},c="How-To",u={unversionedId:"charts/stable/wireguard/how-to",id:"charts/stable/wireguard/how-to",title:"How-To",description:"Scale App",source:"@site/docs/charts/stable/wireguard/how-to.md",sourceDirName:"charts/stable/wireguard",slug:"/charts/stable/wireguard/how-to",permalink:"/docs/charts/stable/wireguard/how-to",draft:!1,editUrl:"https://github.com/truecharts/website/tree/master/docs/charts/stable/wireguard/how-to.md",tags:[],version:"current",frontMatter:{},sidebar:"chartsSidebar",previous:{title:"Changelog",permalink:"/docs/charts/stable/wireguard/CHANGELOG"},next:{title:"wireshark",permalink:"/docs/charts/stable/wireshark/"}},s={},p=[{value:"Scale App",id:"scale-app",level:2},{value:"Native Helm",id:"native-helm",level:2}],d={toc:p};function f(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to"},"How-To"),(0,o.kt)("h2",{id:"scale-app"},"Scale App"),(0,o.kt)("p",null,"TrueNAS Scale users, can configure this app from the easily from the UI.\nStore your wireguard config file in a directory, on one of your pools.\nExample ",(0,o.kt)("inlineCode",{parentName:"p"},"/mnt/pool/vpn.conf")," (Name can be any name. eg ",(0,o.kt)("inlineCode",{parentName:"p"},"wg0.conf"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"x-site.conf"),", etc)\nExample config content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-conf"},"[Interface]\nAddress = 10.0.0.1/24\nListenPort = 51820\nPrivateKey = PRIVATE_KEY\n\n[Peer]\nPublicKey = PUBLIC_KEY\nAllowedIPs = 0.0.0.0/0\nEndpoint = wg.example:51820\n")),(0,o.kt)("p",null,"UI Configuration is simple as that:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"wg-configuration",src:n(3280).Z,width:"1120",height:"859"})),(0,o.kt)("p",null,"Tick ",(0,o.kt)("inlineCode",{parentName:"p"},"Killswitch")," if you want to kill traffic when VPN is down.\nAdd networks in ",(0,o.kt)("inlineCode",{parentName:"p"},"Excluded IPv{4,6} Networks")," that you want to continue their traffic when VPN is down."),(0,o.kt)("p",null,"That's it!"),(0,o.kt)("h2",{id:"native-helm"},"Native Helm"),(0,o.kt)("p",null,"Native helm users can modify ",(0,o.kt)("inlineCode",{parentName:"p"},"values.yaml")," and add their wireguard config directly in there."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'wg:\n  # Set to true if you want to enable killswitch\n  killswitch: false\n  # If you want to exclude networks, do like so\n  excludedIP4networks:\n    - "10.10.10.0/24"\n    - "192.168.1.0/24"\n  excludedIP6networks: []\n  # Leave empty if you going to use the paste your config bellow\n  configFileHostPath: ""\n  # Paste your config bellow.\n  # Indentation matters!\n  config:\n    enabled: false\n    # Your wg config here eg:\n    data: |\n      [Interface]\n      Address = 10.0.0.1/24\n      ListenPort = 51820\n      PrivateKey = PRIVATE_KEY\n\n      [Peer]\n      PublicKey = PUBLIC_KEY\n      AllowedIPs = 0.0.0.0/0\n      Endpoint = wg.example:51820\n')))}f.isMDXComponent=!0},3280:function(e,t,n){t.Z=n.p+"assets/images/wg-configuration-5b44904117396b95ceda62d111d7aaa6.png"}}]);